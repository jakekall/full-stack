{"version":3,"sources":["components/FilterForm.js","components/EntryForm.js","components/Person.js","components/PersonTable.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["FilterForm","_ref","persons","filter","handler","react_default","a","createElement","value","onChange","EntryForm","name","number","nameHandler","numberHandler","resetState","newPerson","create","update","message","onSubmit","event","preventDefault","found","find","person","window","confirm","concat","id","then","list","p","catch","error","console","log","setTimeout","err","type","Person","remove","_ref$person","onClick","PersonTable","changePersons","toLowerCase","startsWith","map","components_Person","key","removed","newPersons","baseUrl","services_persons","getAll","axios","get","response","data","newObject","post","delete","put","Notification","className","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","newName","newNumber","changeMessage","handleNameChange","target","handleNumberChange","handleFilterChange","state","_this2","personService","Fragment","components_Notification","components_FilterForm","components_EntryForm","components_PersonTable","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"sOAeeA,EAbI,SAAAC,GAAkCA,EAA/BC,QAA+B,IAAtBC,EAAsBF,EAAtBE,OAAQC,EAAcH,EAAdG,QAEnC,OACIC,EAAAC,EAAAC,cAAA,yCAEIF,EAAAC,EAAAC,cAAA,SACIC,MAAOL,EACPM,SAAUL,MCsEXM,EA7EG,SAAAT,GAA2G,IAAxGC,EAAwGD,EAAxGC,QAASS,EAA+FV,EAA/FU,KAAMC,EAAyFX,EAAzFW,OAAQC,EAAiFZ,EAAjFY,YAAaC,EAAoEb,EAApEa,cAAeC,EAAqDd,EAArDc,WAAYC,EAAyCf,EAAzCe,UAAWC,EAA8BhB,EAA9BgB,OAAQC,EAAsBjB,EAAtBiB,OAAQC,EAAclB,EAAdkB,QAsD3G,OACId,EAAAC,EAAAC,cAAA,QAAMa,SArDQ,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAQrB,EAAQsB,KAAK,SAAAC,GAAM,OAAIA,EAAOd,OAASA,IAE/Cc,EAAS,CACXd,OACAC,UAGJ,GAAIW,EAqBA,OApBIG,OAAOC,QAAP,GAAAC,OAAkBjB,EAAlB,4DACAO,EAAOK,EAAMM,GAAIJ,GACZK,KAAK,SAAAL,GACF,IAAMM,EAAO7B,EAAQC,OAAO,SAAA6B,GAAC,OAAIA,EAAEH,KAAON,EAAMM,KAChDb,EAAUe,EAAKH,OAAOH,MAEzBQ,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZjB,EAAOQ,GACFK,KAAK,SAAAE,GACFhB,EAAUd,EAAQ0B,OAAOI,QAGzCb,EAAO,0BAAAS,OAAwBjB,EAAxB,YACP0B,WAAW,WACPlB,EAAQ,OACT,WAGPJ,IAIJE,EAAOQ,GACFK,KAAK,SAAAE,GACFhB,EAAUd,EAAQ0B,OAAOI,MAE5BC,MAAM,SAAAK,GACHH,QAAQC,IAAIE,GACZvB,MAGRA,IAEAI,EAAO,2BAAAS,OAAsBjB,IAC7B0B,WAAW,WACPlB,EAAQ,OACT,OAMCd,EAAAC,EAAAC,cAAA,mBAEIF,EAAAC,EAAAC,cAAA,SACIC,MAAOG,EACPF,SAAUI,KAGlBR,EAAAC,EAAAC,cAAA,qBAEIF,EAAAC,EAAAC,cAAA,SACIC,MAAOI,EACPH,SAAUK,KAGlBT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQgC,KAAK,UAAb,kBC7DDC,EAVA,SAAAvC,GAA0C,IAAvCwC,EAAuCxC,EAAvCwC,OAAuCC,EAAAzC,EAA/BwB,OAAUd,EAAqB+B,EAArB/B,KAAMC,EAAe8B,EAAf9B,OACtC,OACIP,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKI,GACLN,EAAAC,EAAAC,cAAA,UAAKK,GACLP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQoC,QAASF,GAAjB,aC+BDG,EAnCK,SAAA3C,GAAyD,IAAtDC,EAAsDD,EAAtDC,QAASC,EAA6CF,EAA7CE,OAAQsC,EAAqCxC,EAArCwC,OAAQI,EAA6B5C,EAA7B4C,cAAe1B,EAAclB,EAAdkB,QA0B3D,OACId,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aAxBAL,EAAQC,OAAO,SAAAsB,GAAM,OACjBA,EAAOd,KAAKmC,cACPC,WAAW5C,EAAO2C,iBAuBJE,IAAI,SAAAvB,GAAM,OAAIpB,EAAAC,EAAAC,cAAC0C,EAAD,CAAQC,IAAKzB,EAAOd,KAAMc,OAAQA,EAAQgB,QAlBjEZ,EAkBsFJ,EAAOI,GAlBzFlB,EAkB6Fc,EAAOd,KAjBnH,WACCe,OAAOC,QAAP,2BAAAC,OAAuCjB,EAAvC,oBACA8B,EAAOZ,GAAIC,KAAK,SAAAqB,GACZ,IAAMC,EAAalD,EAAQC,OAAO,SAAAsB,GAAM,OAAIA,EAAOI,KAAOA,IAC1DgB,EAAcO,KAElBjC,EAAO,0BAAAS,OAAwBjB,IAC/B0B,WAAW,WACPlB,EAAQ,OACT,UAVM,IAACU,EAAIlB,uBCZxB0C,EAAU,eAsBDC,EAAA,CAAEC,OApBF,WAEX,OADgBC,IAAMC,IAAIJ,GACXvB,KAAK,SAAA4B,GAAQ,OAAIA,EAASC,QAkBpB1C,OAfV,SAAC2C,GAEZ,OADgBJ,IAAMK,KAAKR,EAASO,GACrB9B,KAAK,SAAA4B,GAAQ,OAAIA,EAASC,QAaZlB,OAVlB,SAACZ,GAEZ,OADgB2B,IAAMM,OAAN,GAAAlC,OAAgByB,EAAhB,KAAAzB,OAA2BC,IAC5BC,KAAK,SAAA4B,GAAQ,OAAIA,EAASC,QAQJzC,OAL1B,SAACW,EAAI+B,GAEhB,OADgBJ,IAAMO,IAAN,GAAAnC,OAAayB,EAAb,KAAAzB,OAAwBC,GAAM+B,GAC/B9B,KAAK,SAAA4B,GAAQ,OAAIA,EAASC,SCR9BK,EAXM,SAAA/D,GAAiB,IAAdkB,EAAclB,EAAdkB,QACpB,OAAgB,OAAZA,EACO,KAGPd,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gBACV9C,ICsFE+C,cAtFb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAkBRpD,WAAa,WACXqD,EAAKO,SAAS,CACZC,QAAS,GACTC,UAAW,MAtBIT,EA0BnBU,cAAgB,SAAC3D,GACfiD,EAAKO,SAAS,CACZxD,aA5BeiD,EAgCnBvB,cAAgB,SAAC3C,GACfkE,EAAKO,SAAS,CACZzE,aAlCekE,EAsCnBW,iBAAmB,SAAC1D,GAClB+C,EAAKO,SAAS,CAAEC,QAASvD,EAAM2D,OAAOxE,SAvCrB4D,EA0CnBa,mBAAqB,SAAC5D,GACpB+C,EAAKO,SAAS,CAAEE,UAAWxD,EAAM2D,OAAOxE,SA3CvB4D,EA8CnBc,mBAAqB,SAAC7D,GACpB+C,EAAKO,SAAS,CAAExE,OAAQkB,EAAM2D,OAAOxE,SA7CrC4D,EAAKe,MAAQ,CACXjF,QAAS,GACT0E,QAAS,GACTC,UAAW,GACX1E,OAAQ,GACRgB,QAAS,MAPMiD,mFAWC,IAAAgB,EAAAb,KAClBc,EACG9B,SACAzB,KAAK,SAAA5B,GACJkF,EAAKT,SAAS,CAAEzE,+CAoCpB,OACEG,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACEjF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACgF,EAAD,CAAcpE,QAASoD,KAAKY,MAAMhE,UAClCd,EAAAC,EAAAC,cAACiF,EAAD,CACEtF,QAASqE,KAAKY,MAAMjF,QACpBC,OAAQoE,KAAKY,MAAMhF,OACnBC,QAASmE,KAAKW,qBAEhB7E,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACkF,EAAD,CACEvF,QAASqE,KAAKY,MAAMjF,QACpBS,KAAM4D,KAAKY,MAAMP,QACjBhE,OAAQ2D,KAAKY,MAAMN,UACnBhE,YAAa0D,KAAKQ,iBAClBjE,cAAeyD,KAAKU,mBACpBlE,WAAYwD,KAAKxD,WACjBC,UAAWuD,KAAK1B,cAChB5B,OAAQoE,EAAcpE,OACtBC,OAAQmE,EAAcnE,OACtBC,QAASoD,KAAKO,gBAEhBzE,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACmF,EAAD,CACE7C,cAAe0B,KAAK1B,cACpB3C,QAASqE,KAAKY,MAAMjF,QACpBC,OAAQoE,KAAKY,MAAMhF,OACnBsC,OAAQ4C,EAAc5C,OACtBtB,QAASoD,KAAKO,wBAhFNa,IAAMC,iBCFxBC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e95cc65a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FilterForm = ({ persons, filter, handler }) => {\r\n\r\n    return (\r\n        <div>\r\n            rajaa näytettäviä: \r\n            <input\r\n                value={filter}\r\n                onChange={handler}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterForm","import React from 'react'\r\n\r\nconst EntryForm = ({ persons, name, number, nameHandler, numberHandler, resetState, newPerson, create, update, message }) => {\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        const found = persons.find(person => person.name === name)\r\n\r\n        const person = {\r\n            name,\r\n            number\r\n        }\r\n\r\n        if (found) {\r\n            if (window.confirm(`${name} on jo luettelossa, korvataanko vanha numero uudella?`)) {\r\n                update(found.id, person)\r\n                    .then(person => {\r\n                        const list = persons.filter(p => p.id !== found.id)\r\n                        newPerson(list.concat(person))\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                        create(person)\r\n                            .then(p => {\r\n                                newPerson(persons.concat(p))\r\n                            })\r\n                    })\r\n                message(`Muutettiin henkilön ${name} numero`)\r\n                setTimeout(() => {\r\n                    message(null)\r\n                }, 5000)\r\n\r\n            }\r\n            resetState()\r\n            return\r\n        }\r\n\r\n        create(person)\r\n            .then(p => {\r\n                newPerson(persons.concat(p))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                resetState()\r\n                return\r\n            })\r\n        resetState()\r\n\r\n        message(`Lisättiin henkilö ${name}`)\r\n        setTimeout(() => {\r\n            message(null)\r\n        }, 5000)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                nimi:\r\n                <input\r\n                    value={name}\r\n                    onChange={nameHandler}\r\n                />\r\n            </div>\r\n            <div>\r\n                numero:\r\n                <input\r\n                    value={number}\r\n                    onChange={numberHandler}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">lisää</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EntryForm","import React from 'react'\r\n\r\nconst Person = ({ remove, person: { name, number } }) => {\r\n    return (\r\n        <tr>\r\n            <td>{name}</td>\r\n            <td>{number}</td>\r\n            <td><button onClick={remove}>poista</button></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst PersonTable = ({ persons, filter, remove, changePersons, message }) => {\r\n\r\n    const filteredPersons = () => {\r\n        return (\r\n            persons.filter(person =>\r\n                person.name.toLowerCase()\r\n                    .startsWith(filter.toLowerCase())\r\n            )\r\n        )\r\n    }\r\n\r\n    const removePerson = (id, name) => {\r\n        return () => {\r\n            if (window.confirm(`Poistetaanko henkilö ${name} luettelosta?`)) {\r\n                remove(id).then(removed => {\r\n                    const newPersons = persons.filter(person => person.id !== id)\r\n                    changePersons(newPersons)\r\n                })\r\n                message(`Poistettiin henkilö ${name}`)\r\n                setTimeout(() => {\r\n                    message(null)\r\n                }, 5000)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {filteredPersons().map(person => <Person key={person.name} person={person} remove={removePerson(person.id, person.name)} />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default PersonTable","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className='notification'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\nimport FilterForm from './components/FilterForm'\nimport EntryForm from './components/EntryForm'\nimport PersonTable from './components/PersonTable'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      newName: '',\n      newNumber: '',\n      filter: '',\n      message: null\n    }\n  }\n\n  componentDidMount() {\n    personService\n      .getAll()\n      .then(persons => {\n        this.setState({ persons })\n      })\n  }\n\n  resetState = () => {\n    this.setState({\n      newName: '',\n      newNumber: ''\n    })\n  }\n\n  changeMessage = (message) => {\n    this.setState({\n      message\n    })\n  }\n\n  changePersons = (persons) => {\n    this.setState({\n      persons\n    })\n  }\n\n  handleNameChange = (event) => {\n    this.setState({ newName: event.target.value })\n  }\n\n  handleNumberChange = (event) => {\n    this.setState({ newNumber: event.target.value })\n  }\n\n  handleFilterChange = (event) => {\n    this.setState({ filter: event.target.value })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Puhelinluettelo</h1>\n        <Notification message={this.state.message} />\n        <FilterForm\n          persons={this.state.persons}\n          filter={this.state.filter}\n          handler={this.handleFilterChange}\n        />\n        <h2>Lisää uusi</h2>\n        <EntryForm\n          persons={this.state.persons}\n          name={this.state.newName}\n          number={this.state.newNumber}\n          nameHandler={this.handleNameChange}\n          numberHandler={this.handleNumberChange}\n          resetState={this.resetState}\n          newPerson={this.changePersons}\n          create={personService.create}\n          update={personService.update}\n          message={this.changeMessage}\n        />\n        <h2>Numerot</h2>\n        <PersonTable\n          changePersons={this.changePersons}\n          persons={this.state.persons}\n          filter={this.state.filter}\n          remove={personService.remove}\n          message={this.changeMessage}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}